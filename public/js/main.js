(()=>{"use strict";var e={26:(e,t,i)=>{i.d(t,{Z:()=>o});var r=i(81),n=i.n(r),s=i(645),a=i.n(s)()(n());a.push([e.id,"",""]);const o=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var i="",r=void 0!==t[5];return t[4]&&(i+="@supports (".concat(t[4],") {")),t[2]&&(i+="@media ".concat(t[2]," {")),r&&(i+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),i+=e(t),r&&(i+="}"),t[2]&&(i+="}"),t[4]&&(i+="}"),i})).join("")},t.i=function(e,i,r,n,s){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var o=0;o<this.length;o++){var c=this[o][0];null!=c&&(a[c]=!0)}for(var h=0;h<e.length;h++){var u=[].concat(e[h]);r&&a[u[0]]||(void 0!==s&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=s),i&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=i):u[2]=i),n&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=n):u[4]="".concat(n)),t.push(u))}},t}},81:e=>{e.exports=function(e){return e[1]}},379:e=>{var t=[];function i(e){for(var i=-1,r=0;r<t.length;r++)if(t[r].identifier===e){i=r;break}return i}function r(e,r){for(var s={},a=[],o=0;o<e.length;o++){var c=e[o],h=r.base?c[0]+r.base:c[0],u=s[h]||0,l="".concat(h," ").concat(u);s[h]=u+1;var m=i(l),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==m)t[m].references++,t[m].updater(d);else{var p=n(d,r);r.byIndex=o,t.splice(o,0,{identifier:l,updater:p,references:1})}a.push(l)}return a}function n(e,t){var i=t.domAPI(t);return i.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;i.update(e=t)}else i.remove()}}e.exports=function(e,n){var s=r(e=e||[],n=n||{});return function(e){e=e||[];for(var a=0;a<s.length;a++){var o=i(s[a]);t[o].references--}for(var c=r(e,n),h=0;h<s.length;h++){var u=i(s[h]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}s=c}}},569:e=>{var t={};e.exports=function(e,i){var r=function(e){if(void 0===t[e]){var i=document.querySelector(e);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(e){i=null}t[e]=i}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(i)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,i)=>{e.exports=function(e){var t=i.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(i){!function(e,t,i){var r="";i.supports&&(r+="@supports (".concat(i.supports,") {")),i.media&&(r+="@media ".concat(i.media," {"));var n=void 0!==i.layer;n&&(r+="@layer".concat(i.layer.length>0?" ".concat(i.layer):""," {")),r+=i.css,n&&(r+="}"),i.media&&(r+="}"),i.supports&&(r+="}");var s=i.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,i)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function i(r){var n=t[r];if(void 0!==n)return n.exports;var s=t[r]={id:r,exports:{}};return e[r](s,s.exports,i),s.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.nc=void 0,(()=>{class e{constructor(){this.observers=[]}addObserver(e){try{const t=[...this.observers,e];this.observers=t}catch(e){console.log(e)}}removeObserver(e){try{this.observers=this.observers.filter((t=>t!==e))}catch(e){console.log(e)}}notify(e){this.observers.forEach((t=>{t.update(e)}))}}class t{constructor(){}update(){}}class r extends e{constructor(){super(),this.unitTypes={Imperial:"imperial",Metric:"metric"},this.data={heightInches:0,heightFt:0,weightSt:0,weightPounds:0,heightCm:0,weightKg:0,currentUnitType:this.unitTypes.Metric,bmi:0}}set bmi(e){this.data.bmi=e,this.notify(this.data)}set heightCm(e){this.data.heightCm=e,this.bmi=this.calculateBmi()}set weightKg(e){this.data.weightKg=e,this.bmi=this.calculateBmi()}set weightSt(e){this.data.weightSt=e,this.bmi=this.calculateBmi()}set weightPounds(e){this.data.weightPounds=e,this.bmi=this.calculateBmi()}set heightFt(e){this.data.heightFt=e,this.bmi=this.calculateBmi()}set heightInches(e){this.data.heightInches=e,this.bmi=this.calculateBmi()}get heightMetric(){return this.data.heightCm}get weightMetric(){return this.data.weightKg}get heightImperial(){return this.convertFeetToInches(this.data.heightFt)+this.data.heightInches}get weightImperial(){return this.convertStoneToPounds(this.data.weightSt)+this.data.weightPounds}set currentUnitType(e){this.data.currentUnitType=e}get isMetric(){return this.data.currentUnitType===this.unitTypes.Metric}calculateBmi(){return this.isMetric?this.metricBmiCalculator(this.weightMetric,this.heightMetric):this.imperialBmiCalculator(this.weightImperial,this.heightImperial)}reset(){this.heightCm=0,this.weightKg=0,this.heightInches=0,this.weightPounds=0,this.bmi=0}}const n=function(e){return function(t,i){return parseFloat((t/i/i*e).toFixed(1))||0}},s=function(e){return function(t){return t*e}};r.prototype.metricBmiCalculator=n(1e4),r.prototype.imperialBmiCalculator=n(703),r.prototype.convertStoneToPounds=s(14),r.prototype.convertFeetToInches=s(12);const a=r;var o=i(379),c=i.n(o),h=i(795),u=i.n(h),l=i(569),m=i.n(l),d=i(565),p=i.n(d),g=i(216),f=i.n(g),v=i(589),y=i.n(v),b=i(26),w={};w.styleTagTransform=y(),w.setAttributes=p(),w.insert=m().bind(null,"head"),w.domAPI=u(),w.insertStyleElement=f(),c()(b.Z,w),b.Z&&b.Z.locals&&b.Z.locals,new class{constructor(e,t){this.model=e,this.view=t,this.view.bindOnFormChange((e=>{if(e.dataset.unit)this.model[e.dataset.unit]=+e.value;else{if("unit-type"!==e.name)return;this.model.currentUnitType=e.value,this.model.reset(),this.view.reset()}})),this.model.addObserver(this.view),this.model.notify(this.model.data)}}(new a,new class extends t{constructor(){super(),this.form=document.querySelector("#bmi-calculator"),this.selectData={heightCm:{elem:document.querySelector("#height-cm"),min:140,max:210},heightInches:{elem:document.querySelector("#height-in"),min:0,max:11},heightFt:{elem:document.querySelector("#height-ft"),min:4,max:7},weightSt:{elem:document.querySelector("#weight-st"),min:6,max:25},weightPounds:{elem:document.querySelector("#weight-pounds"),min:0,max:13},weightKg:{elem:document.querySelector("#weight-kg"),min:38,max:125}};for(const e in this.selectData){const t=this.selectData[e];this.#e(t.elem,t.min,t.max)}this.imperialSection=document.querySelector("#imperial-section"),this.metricSection=document.querySelector("#metric-section"),this.bmiResultNumber=document.querySelector(".bmi-result-number"),this.bmiResultText=document.querySelector(".bmi-result-text")}#e(e,t,i){for(let r=t;r<=i;r++){const t=this.createElement("option");t.value=r,t.innerText=r,e.append(t)}}createElement(e,t){const i=document.createElement(e);return t&&i.classList.add(t),i}get heightCmElem(){return this.selectData.heightCm.elem}get heightInchesElem(){return this.selectData.heightInches.elem}get heightFtElem(){return this.selectData.heightFt.elem}get weightStElem(){return this.selectData.weightSt.elem}get weightPoundsElem(){return this.selectData.weightPounds.elem}get weightKgElem(){return this.selectData.weightKg.elem}showUnitType(e){this.hide(this.imperialSection),this.hide(this.metricSection),"metric"===e?this.show(this.metricSection):"imperial"===e?this.show(this.imperialSection):console.log("needs to be imperial or metric")}hide(e){e.style.display="none"}show(e){e.style.display="block"}bindOnFormChange(e){this.form.addEventListener("change",(t=>{e(t.target)}))}displayBmi(e){let t="";switch(!0){case 0===e:t="";break;case e<18.5:t="underweight";break;case e>=18.5&&e<=24.9:t="healthy";break;case e>=25&&e<=29.9:t="overweight";break;case e>30:t="obese"}this.bmiResultText.innerText=t,this.bmiResultNumber.innerText=e}reset(){for(const e in this.selectData)this.selectData[e].elem.value=""}update(e){this.showUnitType(e.currentUnitType),this.displayBmi(e.bmi)}})})()})();