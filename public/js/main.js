(()=>{"use strict";var e={26:(e,t,i)=>{i.d(t,{Z:()=>h});var n=i(81),r=i.n(n),s=i(645),a=i.n(s)()(r());a.push([e.id,"",""]);const h=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var i="",n=void 0!==t[5];return t[4]&&(i+="@supports (".concat(t[4],") {")),t[2]&&(i+="@media ".concat(t[2]," {")),n&&(i+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),i+=e(t),n&&(i+="}"),t[2]&&(i+="}"),t[4]&&(i+="}"),i})).join("")},t.i=function(e,i,n,r,s){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(n)for(var h=0;h<this.length;h++){var o=this[h][0];null!=o&&(a[o]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);n&&a[l[0]]||(void 0!==s&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=s),i&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=i):l[2]=i),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},81:e=>{e.exports=function(e){return e[1]}},379:e=>{var t=[];function i(e){for(var i=-1,n=0;n<t.length;n++)if(t[n].identifier===e){i=n;break}return i}function n(e,n){for(var s={},a=[],h=0;h<e.length;h++){var o=e[h],c=n.base?o[0]+n.base:o[0],l=s[c]||0,u="".concat(c," ").concat(l);s[c]=l+1;var m=i(u),d={css:o[1],media:o[2],sourceMap:o[3],supports:o[4],layer:o[5]};if(-1!==m)t[m].references++,t[m].updater(d);else{var g=r(d,n);n.byIndex=h,t.splice(h,0,{identifier:u,updater:g,references:1})}a.push(u)}return a}function r(e,t){var i=t.domAPI(t);return i.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;i.update(e=t)}else i.remove()}}e.exports=function(e,r){var s=n(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<s.length;a++){var h=i(s[a]);t[h].references--}for(var o=n(e,r),c=0;c<s.length;c++){var l=i(s[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}s=o}}},569:e=>{var t={};e.exports=function(e,i){var n=function(e){if(void 0===t[e]){var i=document.querySelector(e);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(e){i=null}t[e]=i}return t[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(i)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,i)=>{e.exports=function(e){var t=i.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(i){!function(e,t,i){var n="";i.supports&&(n+="@supports (".concat(i.supports,") {")),i.media&&(n+="@media ".concat(i.media," {"));var r=void 0!==i.layer;r&&(n+="@layer".concat(i.layer.length>0?" ".concat(i.layer):""," {")),n+=i.css,r&&(n+="}"),i.media&&(n+="}"),i.supports&&(n+="}");var s=i.sourceMap;s&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(n,e,t.options)}(t,e,i)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function i(n){var r=t[n];if(void 0!==r)return r.exports;var s=t[n]={id:n,exports:{}};return e[n](s,s.exports,i),s.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.nc=void 0,(()=>{class e{constructor(){this.observers=[]}addObserver(e){try{const t=[...this.observers,e];this.observers=t}catch(e){console.log(e)}}removeObserver(e){try{this.observers=this.observers.filter((t=>t!==e))}catch(e){console.log(e)}}notify(e){this.observers.forEach((t=>{t.update(e)}))}}class t{constructor(){}update(){}}class n extends e{constructor(){super(),this.unitTypes={Imperial:"imperial",Metric:"metric"},this.data={heightInches:0,heightFt:0,weightSt:0,weightPounds:0,heightCm:0,weightKg:0,currentUnitType:this.unitTypes.Metric,bmi:0}}set bmi(e){this.data.bmi=e,this.notify(this.data)}set heightCm(e){this.data.heightCm=e,this.bmi=this.calculateBmi()}set weightKg(e){this.data.weightKg=e,this.bmi=this.calculateBmi()}set weightSt(e){this.data.weightSt=e,this.bmi=this.calculateBmi()}set weightPounds(e){this.data.weightPounds=e,this.bmi=this.calculateBmi()}set heightFt(e){this.data.heightFt=e,this.bmi=this.calculateBmi()}set heightInches(e){this.data.heightInches=e,this.bmi=this.calculateBmi()}get heightMetric(){return this.data.heightCm}get weightMetric(){return this.data.weightKg}get heightImperial(){return this.convertFeetToInches(this.data.heightFt)+this.data.heightInches}get weightImperial(){return this.convertStoneToPounds(this.data.weightSt)+this.data.weightPounds}set currentUnitType(e){this.data.currentUnitType=e}get isMetric(){return this.data.currentUnitType===this.unitTypes.Metric}calculateBmi(){return this.isMetric?this.metricBmiCalculator(this.weightMetric,this.heightMetric):this.imperialBmiCalculator(this.weightImperial,this.heightImperial)}reset(){this.heightCm=0,this.weightKg=0,this.heightInches=0,this.weightPounds=0,this.bmi=0}}const r=function(e){return function(t,i){return parseFloat((t/i/i*e).toFixed(1))||0}},s=function(e){return function(t){return t*e}};n.prototype.metricBmiCalculator=r(1e4),n.prototype.imperialBmiCalculator=r(703),n.prototype.convertStoneToPounds=s(14),n.prototype.convertFeetToInches=s(12);const a=n;var h=i(379),o=i.n(h),c=i(795),l=i.n(c),u=i(569),m=i.n(u),d=i(565),g=i.n(d),p=i(216),v=i.n(p),f=i(589),w=i.n(f),y=i(26),b={};b.styleTagTransform=w(),b.setAttributes=g(),b.insert=m().bind(null,"head"),b.domAPI=l(),b.insertStyleElement=v(),o()(y.Z,b),y.Z&&y.Z.locals&&y.Z.locals,new class{constructor(e,t){this.model=e,this.view=t;const i=e=>t=>{this.model[e]=+t};this.view.bindOnSelectChange(this.view.heightCmElem,i("heightCm")),this.view.bindOnSelectChange(this.view.heightFtElem,i("heightFt")),this.view.bindOnSelectChange(this.view.heightInchesElem,i("heightInches")),this.view.bindOnSelectChange(this.view.weightKgElem,i("weightKg")),this.view.bindOnSelectChange(this.view.weightStElem,i("weightSt")),this.view.bindOnSelectChange(this.view.weightPoundsElem,i("weightPounds")),this.view.bindOnUnitChange((e=>{this.model.currentUnitType=e,this.model.reset(),this.view.reset()})),this.model.addObserver(this.view),this.model.notify(this.model.data)}}(new a,new class extends t{constructor(){super(),this.selectData={heightCm:{elem:document.querySelector("#height-cm"),min:140,max:210},heightInches:{elem:document.querySelector("#height-in"),min:0,max:11},heightFt:{elem:document.querySelector("#height-ft"),min:4,max:7},weightSt:{elem:document.querySelector("#weight-st"),min:6,max:25},weightPounds:{elem:document.querySelector("#weight-pounds"),min:0,max:13},weightKg:{elem:document.querySelector("#weight-kg"),min:38,max:125}};for(const e in this.selectData){const t=this.selectData[e];this.#e(t.elem,t.min,t.max)}this.unitTypeRadio=document.querySelectorAll('input[name="unit-type"]'),this.imperialSection=document.querySelector("#imperial-section"),this.metricSection=document.querySelector("#metric-section"),this.bmiResultNumber=document.querySelector(".bmi-result-number"),this.bmiResultText=document.querySelector(".bmi-result-text")}#e(e,t,i){for(let n=t;n<=i;n++){const t=this.createElement("option");t.value=n,t.innerText=n,e.append(t)}}createElement(e,t){const i=document.createElement(e);return t&&i.classList.add(t),i}get heightCmElem(){return this.selectData.heightCm.elem}get heightInchesElem(){return this.selectData.heightInches.elem}get heightFtElem(){return this.selectData.heightFt.elem}get weightStElem(){return this.selectData.weightSt.elem}get weightPoundsElem(){return this.selectData.weightPounds.elem}get weightKgElem(){return this.selectData.weightKg.elem}showUnitType(e){this.hide(this.imperialSection),this.hide(this.metricSection),"metric"===e?this.show(this.metricSection):"imperial"===e?this.show(this.imperialSection):console.log("needs to be imperial or metric")}hide(e){e.style.display="none"}show(e){e.style.display="block"}bindOnUnitChange(e){this.unitTypeRadio.forEach((t=>{t.addEventListener("change",(t=>{e(t.target.value)}))}))}bindOnSelectChange(e,t){e.addEventListener("change",(e=>{t(e.target.value)}))}displayBmi(e){let t="";switch(!0){case 0===e:t="";break;case e<18.5:t="underweight";break;case e>=18.5&&e<=24.9:t="healthy";break;case e>=25&&e<=29.9:t="overweight";break;case e>30:t="obese"}this.bmiResultText.innerText=t,this.bmiResultNumber.innerText=e}reset(){for(const e in this.selectData)this.selectData[e].elem.value=""}update(e){this.showUnitType(e.currentUnitType),this.displayBmi(e.bmi)}})})()})();